{"meta":{"title":"WSKCODE","subtitle":"","description":"会当凌绝顶","author":"wsk","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"SSM","date":"2020-11-20T16:52:37.258Z","updated":"2020-11-20T18:05:37.773Z","comments":true,"path":"2020/11/21/SSM/","link":"","permalink":"http://example.com/2020/11/21/SSM/","excerpt":"","text":"基于 SSM 框架的 Web 系统研究与应用SSM框架 包含四个系统应用层，如表示层、控制层、服务层以及数据库访问层。SSM框架结构及应用SpringMVC框架 当操作人员向服务器发送请求时，Spring 前端控制器会第一时间捕获请求，并对请求信息中的 UR 进行详细的分析，进以利用 HandlerMapping 来配置与之相关的数据信息，如：HandlerAdapter。然后还要对 Request 请求中的相关数据进行提取，并将其填入到 Handler 信息中，以便可以顺利启动Handler。最后，当 Handler 执行完成后，还会给 ispatcherServlet返回一个 ModelAndView 对象，根据该对象就可择优出一个 Dispatchers ervlet 进行处理，这样就会形成 ViewResolver 与ModelandView 相结合的渲染视图，进以呈现在屏幕上供操作者使用。 Mybatis框架 由 DAO 与 SQLMap 组件所构成，其中，DAO 组件主要负责抽象 Web 系统中数据访问层以及持久层，进以让系统开发人员能够按照该组件设计模式进行系统设计。而 SQL Map 组件则负责配置各种 statement，采用配置 xml 或注解的方式来进行，并通过 java 对象和 statement 中的 sql 映射功能来生成完整的 sql 语句，然后再经由 mybatis 框架的执行映射，将sql 转化成所需的 java 对象，返回到系统开发人员手中。Spring框架 该框架结构可以帮助一些大型企业解决一些繁琐、难度较高的 Web 系统问题。Spring 框架主要采用了面向切面编程，能够有效控制反转机制、整合多种持久层框架资源，如：表现层、业务层、持久层。并且拥有独立的 MVC 框架。其在 Web 系统开发中主要为系统应用提供 JavaEE 各层的解决方案 基于 MyBatis 和 Spring 的 JavaEE 数据持久层的研究与应用一种基于Spring和JAVA注解方法的解决方案MyBatis执行原理 应用程序调用相对应函数（一般和操作ID相同），传入指定参数。 读取XML配置文件，被调用的程序通过Sq1Map-Config.xml以及操作对象名称找到对应的XML配置文件。 程序将对象和配置文件载入内存中。 查找到对应ID的SQL语句。 带入参数，程序根据映射文件映射的关系将传入对象的属性替换成相对应的SQL所需要的参数值。 执行SQL语句，将替换完参数的SQL语句通过驱动程序传入数据库管理系统中执行。 返回结果，根据XML文件中对应操作ID配置的返回类型，将执行SQL语句后的结果返回给应用程序。 设计思路 让程序在运行中自动找到相对应的XML配置文件 为了让JAVA应用程序在运行的过程中动态获取到这个对象实体在XML映射文件中配置的SQL语句，可以使用JAVA的反射功能和JAVA的注解功能来实现。事先需要在每个POJO对象类上增加一个自定义注解，注解上标明该对象所对应的XML映射文件名称、主键名称、不需要查询的列名称以及其他需要的信息，然后使用JAVA的反射功能，让应用程序在JAVA虚拟机运行的过程中获得该对象对应的XML文件名称，通过查找文件内容找到某次操作对应的SQL语句。","categories":[],"tags":[]},{"title":"","slug":"HTML","date":"2020-11-09T07:47:51.456Z","updated":"2020-11-09T07:47:51.556Z","comments":true,"path":"2020/11/09/HTML/","link":"","permalink":"http://example.com/2020/11/09/HTML/","excerpt":"","text":"HTMLweb概念概述javaweb使用java语言开发基于互联网的项目 软件架构C/S：Client/Server 客户端/服务器*用户本地有一个客户端，在远程有一个服务器端 B/S：Browser/Server 浏览器/服务器*只要浏览器，用户通过不同的网址，客户访问不同的服务端程序 资源分类： 静态资源： 使用静态网页开发技术发布的资源 特点：所欲用户访问得到的结果都一样 如：文本，图片，音频，视频，HTML，CSS，JavaScript 如果用户请求的是静态资源，那么服务器会直接将静态资源发送给浏览器。浏览器中内置了津泰资源的解析引擎，可以展示静态资源 动态资源 ： 使用动态网页及时发布资源。 如：jsp/servlet,php,asp… 如果用户请求动态资源，服务器会将动态资源转换为动态资源，再发给浏览器 静态资源： HTML：用于基础网页搭建，展示页面内容 CSS：用于美化页面 JavaScript：控制页面元素，实现动态效果","categories":[],"tags":[]},{"title":"我的第一篇博文","slug":"我的第一篇博文","date":"2020-11-06T09:33:12.000Z","updated":"2020-11-06T10:13:42.374Z","comments":true,"path":"2020/11/06/我的第一篇博文/","link":"","permalink":"http://example.com/2020/11/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/","excerpt":"","text":"第一章内容 第二章内容 ##参考文献","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-11-06T09:21:52.848Z","updated":"2020-11-06T09:21:52.848Z","comments":true,"path":"2020/11/06/hello-world/","link":"","permalink":"http://example.com/2020/11/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}